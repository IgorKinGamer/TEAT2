AODU_1:24:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer):-1 => 1
ROR_1:69:java.lang.Boolean_zero(): quantia.obterQuantiaEmEscala() == 0  =>   quantia.obterQuantiaEmEscala() != 0
COR_1:94:boolean_equals(java.lang.Object): sinal.equals( outro.sinal ) && quantia.equals( outro.quantia )  =>   sinal.equals( outro.sinal ) || quantia.equals( outro.quantia )
COR_2:94:boolean_equals(java.lang.Object): sinal.equals( outro.sinal ) && quantia.equals( outro.quantia )  =>   sinal.equals( outro.sinal ) ^ quantia.equals( outro.quantia )
COR_3:94:boolean_equals(java.lang.Object): sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda )  =>   sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) || moeda.equals( outro.moeda )
COR_4:94:boolean_equals(java.lang.Object): sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda )  =>   (sinal.equals( outro.sinal ) && quantia.equals( outro.quantia )) ^ moeda.equals( outro.moeda )
COD_1:84:void_validarMoeda(br.ufsc.ine.leb.sistemaBancario.Dinheiro):!moeda.equals( quantiaSomada.obterMoeda() ) => moeda.equals( quantiaSomada.obterMoeda() )
COI_1:24:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer): valor >= 0  =>  !(valor >= 0)
COI_2:49:java.lang.Boolean_negativo(): sinal < 0  =>  !(sinal < 0)
COI_3:69:java.lang.Boolean_zero(): quantia.obterQuantiaEmEscala() == 0  =>  !(quantia.obterQuantiaEmEscala() == 0)
COI_4:94:boolean_equals(java.lang.Object): sinal.equals( outro.sinal ) && quantia.equals( outro.quantia )  =>  !(sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ))
COI_5:94:boolean_equals(java.lang.Object): sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda )  =>  !(sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda ))
SDL_1:25:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer): this.moeda = moeda; this.sinal = valor >= 0 ? 1 : -1; this.quantia = new br.ufsc.ine.leb.sistemaBancario.Dinheiro( moeda, 0, valor );  =>   this.sinal = valor >= 0 ? 1 : -1; this.quantia = new br.ufsc.ine.leb.sistemaBancario.Dinheiro( moeda, 0, valor );
SDL_2:25:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer): this.moeda = moeda; this.sinal = valor >= 0 ? 1 : -1; this.quantia = new br.ufsc.ine.leb.sistemaBancario.Dinheiro( moeda, 0, valor );  =>   this.moeda = moeda; this.quantia = new br.ufsc.ine.leb.sistemaBancario.Dinheiro( moeda, 0, valor );
SDL_3:25:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer): this.moeda = moeda; this.sinal = valor >= 0 ? 1 : -1; this.quantia = new br.ufsc.ine.leb.sistemaBancario.Dinheiro( moeda, 0, valor );  =>   this.moeda = moeda; this.sinal = valor >= 0 ? 1 : -1;
SDL_4:32:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_somar(br.ufsc.ine.leb.sistemaBancario.Dinheiro): validarMoeda( quantiaSomada ); java.lang.Integer valor = quantia.obterQuantiaEmEscala() * sinal + quantiaSomada.obterQuantiaEmEscala(); return new br.ufsc.ine.leb.sistemaBancario.ValorMonetario( moeda, valor );  =>   java.lang.Integer valor = quantia.obterQuantiaEmEscala() * sinal + quantiaSomada.obterQuantiaEmEscala(); return new br.ufsc.ine.leb.sistemaBancario.ValorMonetario( moeda, valor );
SDL_5:39:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_subtrair(br.ufsc.ine.leb.sistemaBancario.Dinheiro): validarMoeda( quantiaSubtraida ); java.lang.Integer valor = quantia.obterQuantiaEmEscala() * sinal - quantiaSubtraida.obterQuantiaEmEscala(); return new br.ufsc.ine.leb.sistemaBancario.ValorMonetario( moeda, valor );  =>   java.lang.Integer valor = quantia.obterQuantiaEmEscala() * sinal - quantiaSubtraida.obterQuantiaEmEscala(); return new br.ufsc.ine.leb.sistemaBancario.ValorMonetario( moeda, valor );
SDL_6:55:java.lang.String_formatado(): return zero() ? formatarSemSinal() : formatarComSinal();  =>   return \"\";
SDL_7:60:java.lang.String_formatarComSinal(): return negativo() ? formatarNegativo() : formatarPositivo();  =>   return \"\";
SDL_8:65:java.lang.String_formatarSemSinal(): return String.format( \"%s\", quantia.formatado() );  =>   return \"\";
SDL_9:75:java.lang.String_formatarPositivo(): return String.format( \"+%s\", quantia.formatado() );  =>   return \"\";
SDL_10:80:java.lang.String_formatarNegativo(): return String.format( \"-%s\", quantia.formatado() );  =>   return \"\";
SDL_11:84:void_validarMoeda(br.ufsc.ine.leb.sistemaBancario.Dinheiro): if (!moeda.equals( quantiaSomada.obterMoeda() )) {     throw new java.lang.UnsupportedOperationException(); }  =>  
SDL_12:85:void_validarMoeda(br.ufsc.ine.leb.sistemaBancario.Dinheiro): throw new java.lang.UnsupportedOperationException();  =>  
SDL_13:87:void_validarMoeda(br.ufsc.ine.leb.sistemaBancario.Dinheiro): if (!moeda.equals( quantiaSomada.obterMoeda() )) {     throw new java.lang.UnsupportedOperationException(); }  =>   if (true) {     throw new java.lang.UnsupportedOperationException(); }
SDL_14:92:boolean_equals(java.lang.Object): if (objeto instanceof br.ufsc.ine.leb.sistemaBancario.ValorMonetario) {     br.ufsc.ine.leb.sistemaBancario.ValorMonetario outro = (br.ufsc.ine.leb.sistemaBancario.ValorMonetario) objeto;     java.lang.Boolean iguaisZero = zero() && outro.zero();     java.lang.Boolean iguaisComMesmaMoeda = sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda );     return iguaisZero || iguaisComMesmaMoeda; } return super.equals( objeto );  =>   return super.equals( objeto );
SDL_15:97:boolean_equals(java.lang.Object): if (objeto instanceof br.ufsc.ine.leb.sistemaBancario.ValorMonetario) {     br.ufsc.ine.leb.sistemaBancario.ValorMonetario outro = (br.ufsc.ine.leb.sistemaBancario.ValorMonetario) objeto;     java.lang.Boolean iguaisZero = zero() && outro.zero();     java.lang.Boolean iguaisComMesmaMoeda = sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda );     return iguaisZero || iguaisComMesmaMoeda; }  =>   if (true) {     br.ufsc.ine.leb.sistemaBancario.ValorMonetario outro = (br.ufsc.ine.leb.sistemaBancario.ValorMonetario) objeto;     java.lang.Boolean iguaisZero = zero() && outro.zero();     java.lang.Boolean iguaisComMesmaMoeda = sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda );     return iguaisZero || iguaisComMesmaMoeda; }
SDL_16:96:boolean_equals(java.lang.Object): return iguaisZero || iguaisComMesmaMoeda;  =>   return true;
SDL_17:96:boolean_equals(java.lang.Object): return iguaisZero || iguaisComMesmaMoeda;  =>   return false;
SDL_18:98:boolean_equals(java.lang.Object): return super.equals( objeto );  =>   return true;
SDL_19:98:boolean_equals(java.lang.Object): return super.equals( objeto );  =>   return false;
SDL_20:103:java.lang.String_toString(): return formatado();  =>   return \"\";
VDL_1:24:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer):valor >= 0 => 0
VDL_2:31:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_somar(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal => quantia.obterQuantiaEmEscala()
VDL_3:38:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_subtrair(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal => quantia.obterQuantiaEmEscala()
VDL_4:49:java.lang.Boolean_negativo():sinal < 0 => 0
VDL_5:95:boolean_equals(java.lang.Object):iguaisZero || iguaisComMesmaMoeda => iguaisComMesmaMoeda
VDL_6:95:boolean_equals(java.lang.Object):iguaisZero || iguaisComMesmaMoeda => iguaisZero
ODL_1:24:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer):valor >= 0 => valor
ODL_2:24:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer):valor >= 0 => 0
ODL_3:24:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer):-1 => 1
ODL_4:31:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_somar(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal => quantia.obterQuantiaEmEscala()
ODL_5:31:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_somar(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal => sinal
ODL_6:31:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_somar(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal + quantiaSomada.obterQuantiaEmEscala() => quantia.obterQuantiaEmEscala() * sinal
ODL_7:31:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_somar(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal + quantiaSomada.obterQuantiaEmEscala() => quantiaSomada.obterQuantiaEmEscala()
ODL_8:38:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_subtrair(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal => quantia.obterQuantiaEmEscala()
ODL_9:38:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_subtrair(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal => sinal
ODL_10:38:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_subtrair(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal - quantiaSubtraida.obterQuantiaEmEscala() => quantia.obterQuantiaEmEscala() * sinal
ODL_11:38:br.ufsc.ine.leb.sistemaBancario.ValorMonetario_subtrair(br.ufsc.ine.leb.sistemaBancario.Dinheiro):quantia.obterQuantiaEmEscala() * sinal - quantiaSubtraida.obterQuantiaEmEscala() => quantiaSubtraida.obterQuantiaEmEscala()
ODL_12:49:java.lang.Boolean_negativo():sinal < 0 => sinal
ODL_13:49:java.lang.Boolean_negativo():sinal < 0 => 0
ODL_14:69:java.lang.Boolean_zero():quantia.obterQuantiaEmEscala() == 0 => quantia.obterQuantiaEmEscala()
ODL_15:69:java.lang.Boolean_zero():quantia.obterQuantiaEmEscala() == 0 => 0
ODL_16:84:void_validarMoeda(br.ufsc.ine.leb.sistemaBancario.Dinheiro):!moeda.equals( quantiaSomada.obterMoeda() ) => moeda.equals( quantiaSomada.obterMoeda() )
ODL_17:93:boolean_equals(java.lang.Object):zero() && outro.zero() => zero()
ODL_18:93:boolean_equals(java.lang.Object):zero() && outro.zero() => outro.zero()
ODL_19:94:boolean_equals(java.lang.Object):sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) => sinal.equals( outro.sinal )
ODL_20:94:boolean_equals(java.lang.Object):sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) => quantia.equals( outro.quantia )
ODL_21:94:boolean_equals(java.lang.Object):sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda ) => sinal.equals( outro.sinal ) && quantia.equals( outro.quantia )
ODL_22:94:boolean_equals(java.lang.Object):sinal.equals( outro.sinal ) && quantia.equals( outro.quantia ) && moeda.equals( outro.moeda ) => moeda.equals( outro.moeda )
ODL_23:95:boolean_equals(java.lang.Object):iguaisZero || iguaisComMesmaMoeda => iguaisZero
ODL_24:95:boolean_equals(java.lang.Object):iguaisZero || iguaisComMesmaMoeda => iguaisComMesmaMoeda
CDL_1:24:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer):valor >= 0 => valor
CDL_2:24:ValorMonetario(br.ufsc.ine.leb.sistemaBancario.Moeda,java.lang.Integer):-1 =>  
CDL_3:49:java.lang.Boolean_negativo():sinal < 0 => sinal
CDL_4:69:java.lang.Boolean_zero():quantia.obterQuantiaEmEscala() == 0 => quantia.obterQuantiaEmEscala()
