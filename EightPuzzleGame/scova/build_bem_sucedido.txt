Buildfile: D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\sc_instrumenter\build\build.xml
     [echo] ../bin;../deps/asm-debug-all-4.1.jar;../deps/commons-io-2.4.jar;../deps/junit-4.10.jar;C:/Users/Aniceto/workspace/junit_original/lib/hamcrest-core-1.3.jar
     [echo] {project.output.classpath}: 
     [echo] D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/scova
     [echo] {project.input.classpath}: 
     [echo] D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/bin
     [echo] {project.input.folder}: 
     [echo] D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/bin
     [echo] {project.output.folder}: 
     [echo] D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/scova
     [echo] {test.home}: 
     [echo] D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/tst
clean:
   [delete] Deleting directory D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\sc_instrumenter\bin
    [mkdir] Created dir: D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\sc_instrumenter\bin
compile-lib:
    [javac] D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\sc_instrumenter\build\build.xml:8: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
compile:
    [javac] D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\sc_instrumenter\build\build.xml:17: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 19 source files to D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\sc_instrumenter\bin
    [javac] Note: D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\sc_instrumenter\src\test\java\org\scova\instrumenter\RunSampleClassInstrumented.java uses or overrides a deprecated API.
    [javac] Note: Recompile with -Xlint:deprecation for details.
    [javac] Note: D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\sc_instrumenter\src\test\java\org\scova\instrumenter\RunSampleClassInstrumented.java uses unchecked or unsafe operations.
    [javac] Note: Recompile with -Xlint:unchecked for details.
instrument-all:
     [java] Usage: sc [input_folder] [output_folder]
     [java] Input folder: D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/bin
     [java] Output folder: D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/scova
     [java] deleting folder D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/scova
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\apl\ViewGameWithDirection.class
     [java] Analysing method <init>
     [java] Analysing method main
     [java] Generate ClearDependenciesOf: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.input
     [java] Generate ClearDependenciesOf: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.input
     [java] Generate ClearDependenciesOf: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.entry
     [java] Found dependency: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.entry <- java/io/BufferedReader.readLine()Ljava/lang/String;
     [java] Found dependency: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.entry <- apl/ViewGameWithDirection.main([Ljava/lang/String;)V.input
     [java] Generate ClearDependenciesOf: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.game
     [java] Generate ClearDependenciesOf: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.entry
     [java] Generate ClearDependenciesOf: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.entry
     [java] Found dependency: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.entry <- java/io/BufferedReader.readLine()Ljava/lang/String;
     [java] Found dependency: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.entry <- apl/ViewGameWithDirection.main([Ljava/lang/String;)V.input
     [java] Generate ClearDependenciesOf: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.game
     [java] Generate ClearDependenciesOf: apl/ViewGameWithDirection.main([Ljava/lang/String;)V.game
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Board.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/Board.lines
     [java] PUTFIELD found for field domain/Board.<init>(II)V.line
     [java] Generate ClearDependenciesOf: domain/Board.columns
     [java] PUTFIELD found for field domain/Board.<init>(II)V.column
     [java] Generate ClearDependenciesOf: domain/Board.grid
     [java] Analysing method initializeAllCells
     [java] Generate ClearDependenciesOf: domain/Board.initializeAllCells()V.i
     [java] Generate ClearDependenciesOf: domain/Board.initializeAllCells()V.j
     [java] Analysing method putTile
     [java] Analysing method getTile
     [java] Generate ClearDependenciesOf: domain/Board.getTile(Ldomain/Position;)Ldomain/Tile;
     [java] Generate ClearDependenciesOf: domain/Board.getTile(Ldomain/Position;)Ldomain/Tile;
     [java] Analysing method isAdjacent
     [java] Generate ClearDependenciesOf: domain/Board.isAdjacent(Ldomain/Position;Ldomain/Position;)Z
     [java] Analysing method changeTilesInPositions
     [java] Generate ClearDependenciesOf: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell1
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell1 <- domain/Grid.get(II)Ljava/lang/Object;
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell1 <- domain/Board.grid
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell1 <- domain/Position.getLine()I
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell1 <- domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.position1
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell1 <- domain/Position.getColumn()I
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell1 <- domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.position1
     [java] Generate ClearDependenciesOf: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell2
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell2 <- domain/Grid.get(II)Ljava/lang/Object;
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell2 <- domain/Board.grid
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell2 <- domain/Position.getLine()I
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell2 <- domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.position2
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell2 <- domain/Position.getColumn()I
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell2 <- domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.position2
     [java] Generate ClearDependenciesOf: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.aux
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.aux <- domain/Cell.getTile()Ldomain/Tile;
     [java] Found dependency: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.aux <- domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z.cell1
     [java] Generate ClearDependenciesOf: domain/Board.changeTilesInPositions(Ldomain/Position;Ldomain/Position;)Z
     [java] Analysing method isInTheSuperiorBorder
     [java] Generate ClearDependenciesOf: domain/Board.isInTheSuperiorBorder(Ldomain/Position;)Z
     [java] Analysing method isInTheBottomBorder
     [java] Generate ClearDependenciesOf: domain/Board.isInTheBottomBorder(Ldomain/Position;)Z
     [java] Generate ClearDependenciesOf: domain/Board.isInTheBottomBorder(Ldomain/Position;)Z
     [java] Analysing method isInTheLeftBorder
     [java] Generate ClearDependenciesOf: domain/Board.isInTheLeftBorder(Ldomain/Position;)Z
     [java] Analysing method isInTheRightBorder
     [java] Generate ClearDependenciesOf: domain/Board.isInTheRightBorder(Ldomain/Position;)Z
     [java] Generate ClearDependenciesOf: domain/Board.isInTheRightBorder(Ldomain/Position;)Z
     [java] Analysing method isInsideTheBoard
     [java] Generate ClearDependenciesOf: domain/Board.isInsideTheBoard(Ldomain/Position;)Z
     [java] Generate ClearDependenciesOf: domain/Board.isInsideTheBoard(Ldomain/Position;)Z
     [java] Analysing method equals
     [java] Generate ClearDependenciesOf: domain/Board.equals(Ljava/lang/Object;)Z
     [java] Generate ClearDependenciesOf: domain/Board.equals(Ljava/lang/Object;)Z.i
     [java] Generate ClearDependenciesOf: domain/Board.equals(Ljava/lang/Object;)Z.j
     [java] Generate ClearDependenciesOf: domain/Board.equals(Ljava/lang/Object;)Z
     [java] Generate ClearDependenciesOf: domain/Board.equals(Ljava/lang/Object;)Z
     [java] Analysing method toString
     [java] Generate ClearDependenciesOf: domain/Board.toString()Ljava/lang/String;.result
     [java] Generate ClearDependenciesOf: domain/Board.toString()Ljava/lang/String;.i
     [java] Generate ClearDependenciesOf: domain/Board.toString()Ljava/lang/String;.j
     [java] Generate ClearDependenciesOf: domain/Board.toString()Ljava/lang/String;.cell
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.cell <- domain/Grid.get(II)Ljava/lang/Object;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.cell <- domain/Board.grid
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.cell <- domain/Board.toString()Ljava/lang/String;.i
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.cell <- domain/Board.toString()Ljava/lang/String;.j
     [java] Generate ClearDependenciesOf: domain/Board.toString()Ljava/lang/String;.result
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.toString()Ljava/lang/String;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- domain/Board.toString()Ljava/lang/String;.i
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- domain/Board.toString()Ljava/lang/String;.j
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- domain/Cell.toString()Ljava/lang/String;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- domain/Board.toString()Ljava/lang/String;.cell
     [java] Generate ClearDependenciesOf: domain/Board.toString()Ljava/lang/String;.result
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.toString()Ljava/lang/String;
     [java] Found dependency: domain/Board.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Generate ClearDependenciesOf: domain/Board.toString()Ljava/lang/String;
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Cell.class
     [java] Analysing method <init>
     [java] Analysing method putTile
     [java] Generate ClearDependenciesOf: domain/Cell.tile
     [java] PUTFIELD found for field domain/Cell.putTile(Ldomain/Tile;)V.tile
     [java] Analysing method removeTile
     [java] Generate ClearDependenciesOf: domain/Cell.removeTile()Ldomain/Tile;.aux
     [java] Found dependency: domain/Cell.removeTile()Ldomain/Tile;.aux <- domain/Cell.tile
     [java] Generate ClearDependenciesOf: domain/Cell.tile
     [java] Generate ClearDependenciesOf: domain/Cell.removeTile()Ldomain/Tile;
     [java] Analysing method getTile
     [java] Generate ClearDependenciesOf: domain/Cell.getTile()Ldomain/Tile;
     [java] Analysing method equals
     [java] Generate ClearDependenciesOf: domain/Cell.equals(Ljava/lang/Object;)Z
     [java] Generate ClearDependenciesOf: domain/Cell.equals(Ljava/lang/Object;)Z
     [java] Generate ClearDependenciesOf: domain/Cell.equals(Ljava/lang/Object;)Z
     [java] Analysing method toString
     [java] Generate ClearDependenciesOf: domain/Cell.toString()Ljava/lang/String;
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\DifficultyLevel.class
     [java] Analysing method <clinit>
     [java] Analysing method <init>
     [java] Analysing method values
     [java] Generate ClearDependenciesOf: domain/DifficultyLevel.values()[Ldomain/DifficultyLevel;.hidden0
     [java] Generate ClearDependenciesOf: domain/DifficultyLevel.values()[Ldomain/DifficultyLevel;.hidden1
     [java] Generate ClearDependenciesOf: domain/DifficultyLevel.values()[Ldomain/DifficultyLevel;.hidden2
     [java] Generate ClearDependenciesOf: domain/DifficultyLevel.values()[Ldomain/DifficultyLevel;
     [java] Analysing method valueOf
     [java] Generate ClearDependenciesOf: domain/DifficultyLevel.valueOf(Ljava/lang/String;)Ldomain/DifficultyLevel;
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\EmbaralhadorFixo.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/EmbaralhadorFixo.movimentos
     [java] Generate ClearDependenciesOf: domain/EmbaralhadorFixo.movimentos
     [java] PUTFIELD found for field java/util/Collections.emptyList()Ljava/util/List;
     [java] Analysing method shuffle
     [java] Generate ClearDependenciesOf: domain/EmbaralhadorFixo.shuffle(Ldomain/Puzzle;)V.hidden3
     [java] Found dependency: domain/EmbaralhadorFixo.shuffle(Ldomain/Puzzle;)V.hidden3 <- java/util/List.iterator()Ljava/util/Iterator;
     [java] Found dependency: domain/EmbaralhadorFixo.shuffle(Ldomain/Puzzle;)V.hidden3 <- domain/EmbaralhadorFixo.movimentos
     [java] Generate ClearDependenciesOf: domain/EmbaralhadorFixo.shuffle(Ldomain/Puzzle;)V.d
     [java] Found dependency: domain/EmbaralhadorFixo.shuffle(Ldomain/Puzzle;)V.d <- java/util/Iterator.next()Ljava/lang/Object;
     [java] Found dependency: domain/EmbaralhadorFixo.shuffle(Ldomain/Puzzle;)V.d <- domain/EmbaralhadorFixo.shuffle(Ldomain/Puzzle;)V.hidden3
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\FactoryStrategyShufflePuzzle.class
     [java] Analysing method <clinit>
     [java] Analysing method <init>
     [java] Analysing method getInstance
     [java] Generate ClearDependenciesOf: domain/FactoryStrategyShufflePuzzle.getInstance()Ldomain/FactoryStrategyShufflePuzzle;
     [java] Analysing method pegaEstrategia
     [java] Generate ClearDependenciesOf: domain/FactoryStrategyShufflePuzzle.pegaEstrategia(Ldomain/DifficultyLevel;)Ldomain/StrategyShufflePuzzle;.e
     [java] Generate ClearDependenciesOf: domain/FactoryStrategyShufflePuzzle.pegaEstrategia(Ldomain/DifficultyLevel;)Ldomain/StrategyShufflePuzzle;
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Grid.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/Grid.numberOfLines
     [java] PUTFIELD found for field domain/Grid.<init>(II)V.numberOfLines
     [java] Generate ClearDependenciesOf: domain/Grid.numberOfColumns
     [java] PUTFIELD found for field domain/Grid.<init>(II)V.numberOfColumns
     [java] Generate ClearDependenciesOf: domain/Grid.matrix
     [java] Analysing method put
     [java] Analysing method get
     [java] Generate ClearDependenciesOf: domain/Grid.get(II)Ljava/lang/Object;
     [java] Generate ClearDependenciesOf: domain/Grid.get(II)Ljava/lang/Object;
     [java] Analysing method toString
     [java] Generate ClearDependenciesOf: domain/Grid.toString()Ljava/lang/String;.result
     [java] Generate ClearDependenciesOf: domain/Grid.toString()Ljava/lang/String;.i
     [java] Generate ClearDependenciesOf: domain/Grid.toString()Ljava/lang/String;.j
     [java] Generate ClearDependenciesOf: domain/Grid.toString()Ljava/lang/String;.result
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.toString()Ljava/lang/String;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(I)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- domain/Grid.toString()Ljava/lang/String;.i
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- domain/Grid.toString()Ljava/lang/String;.j
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- domain/Grid.matrix
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- domain/Grid.toString()Ljava/lang/String;.i
     [java] Found dependency: domain/Grid.toString()Ljava/lang/String;.result <- domain/Grid.toString()Ljava/lang/String;.j
     [java] Generate ClearDependenciesOf: domain/Grid.toString()Ljava/lang/String;
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Position.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/Position.line
     [java] PUTFIELD found for field domain/Position.<init>(II)V.line
     [java] Generate ClearDependenciesOf: domain/Position.column
     [java] PUTFIELD found for field domain/Position.<init>(II)V.column
     [java] Analysing method getLine
     [java] Generate ClearDependenciesOf: domain/Position.getLine()I
     [java] Analysing method getColumn
     [java] Generate ClearDependenciesOf: domain/Position.getColumn()I
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Puzzle$Direction.class
     [java] Analysing method <clinit>
     [java] Analysing method <init>
     [java] Analysing method values
     [java] Generate ClearDependenciesOf: domain/Puzzle$Direction.values()[Ldomain/Puzzle$Direction;.hidden0
     [java] Generate ClearDependenciesOf: domain/Puzzle$Direction.values()[Ldomain/Puzzle$Direction;.hidden1
     [java] Generate ClearDependenciesOf: domain/Puzzle$Direction.values()[Ldomain/Puzzle$Direction;.hidden2
     [java] Generate ClearDependenciesOf: domain/Puzzle$Direction.values()[Ldomain/Puzzle$Direction;
     [java] Analysing method valueOf
     [java] Generate ClearDependenciesOf: domain/Puzzle$Direction.valueOf(Ljava/lang/String;)Ldomain/Puzzle$Direction;
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Puzzle.class
     [java] Analysing method moveToEmptyCell
     [java] Analysing method moveTile
     [java] Analysing method moveTile
     [java] Analysing method endOfTheGame
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\PuzzleGame.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.boardWithFinalState
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.board
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.positionsOfTiles
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.<init>(ILdomain/StrategyShufflePuzzle;)V.listOfTiles
     [java] Found dependency: domain/PuzzleGame.<init>(ILdomain/StrategyShufflePuzzle;)V.listOfTiles <- domain/PuzzleGame.generateListOfTiles(I)Ljava/util/List;
     [java] Found dependency: domain/PuzzleGame.<init>(ILdomain/StrategyShufflePuzzle;)V.listOfTiles <- domain/PuzzleGame.<init>(ILdomain/StrategyShufflePuzzle;)V.this
     [java] Found dependency: domain/PuzzleGame.<init>(ILdomain/StrategyShufflePuzzle;)V.listOfTiles <- domain/PuzzleGame.<init>(ILdomain/StrategyShufflePuzzle;)V.dimension
     [java] Found dependency: domain/PuzzleGame.<init>(ILdomain/StrategyShufflePuzzle;)V.listOfTiles <- domain/PuzzleGame.<init>(ILdomain/StrategyShufflePuzzle;)V.dimension
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.emptyCell
     [java] Analysing method putTilesInTheBoard
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tilesListIterator
     [java] Found dependency: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tilesListIterator <- java/util/List.iterator()Ljava/util/Iterator;
     [java] Found dependency: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tilesListIterator <- domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.list
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.line
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.column
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tile
     [java] Found dependency: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tile <- java/util/Iterator.next()Ljava/lang/Object;
     [java] Found dependency: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tile <- domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tilesListIterator
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.position
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.line
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.column
     [java] Found dependency: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.column <- java/util/Iterator.next()Ljava/lang/Object;
     [java] Found dependency: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.column <- domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tilesListIterator
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheBoard(Ldomain/SquareBoard;Ljava/util/List;)V.tile
     [java] Analysing method dbg_putTilesInTheBoard
     [java] Analysing method putTilesInTheMapOfPositions
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tilesListIterator
     [java] Found dependency: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tilesListIterator <- java/util/List.iterator()Ljava/util/Iterator;
     [java] Found dependency: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tilesListIterator <- domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.list
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.line
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.column
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tile
     [java] Found dependency: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tile <- java/util/Iterator.next()Ljava/lang/Object;
     [java] Found dependency: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tile <- domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tilesListIterator
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.position
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.line
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.column
     [java] Found dependency: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.column <- java/util/Iterator.next()Ljava/lang/Object;
     [java] Found dependency: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.column <- domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tilesListIterator
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.putTilesInTheMapOfPositions(Ljava/util/Map;Ljava/util/List;I)V.tile
     [java] Analysing method generateListOfTiles
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.generateListOfTiles(I)Ljava/util/List;.listOfTiles
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.generateListOfTiles(I)Ljava/util/List;.i
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.generateListOfTiles(I)Ljava/util/List;
     [java] Analysing method moveTile
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveTile(I)V.tilePosition
     [java] Found dependency: domain/PuzzleGame.moveTile(I)V.tilePosition <- domain/PuzzleGame.positionsOfTiles
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.emptyCell
     [java] PUTFIELD found for field domain/PuzzleGame.moveTile(I)V.tilePosition
     [java] Analysing method moveTile
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveTile(II)V.posicaoPeca
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveTile(II)V.peca
     [java] Found dependency: domain/PuzzleGame.moveTile(II)V.peca <- domain/SquareBoard.getTile(Ldomain/Position;)Ldomain/Tile;
     [java] Found dependency: domain/PuzzleGame.moveTile(II)V.peca <- domain/PuzzleGame.board
     [java] Found dependency: domain/PuzzleGame.moveTile(II)V.peca <- domain/PuzzleGame.moveTile(II)V.posicaoPeca
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.emptyCell
     [java] PUTFIELD found for field domain/PuzzleGame.moveTile(II)V.posicaoPeca
     [java] Analysing method moveToEmptyCell
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Analysing method moveDown
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveDown()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveDown()Z.tile
     [java] Found dependency: domain/PuzzleGame.moveDown()Z.tile <- domain/SquareBoard.getTile(Ldomain/Position;)Ldomain/Tile;
     [java] Found dependency: domain/PuzzleGame.moveDown()Z.tile <- domain/PuzzleGame.board
     [java] Found dependency: domain/PuzzleGame.moveDown()Z.tile <- domain/PuzzleGame.moveDown()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveDown()Z.hidden3
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.emptyCell
     [java] PUTFIELD found for field domain/PuzzleGame.moveDown()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveDown()Z
     [java] Analysing method moveUp
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveUp()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveUp()Z.tile
     [java] Found dependency: domain/PuzzleGame.moveUp()Z.tile <- domain/SquareBoard.getTile(Ldomain/Position;)Ldomain/Tile;
     [java] Found dependency: domain/PuzzleGame.moveUp()Z.tile <- domain/PuzzleGame.board
     [java] Found dependency: domain/PuzzleGame.moveUp()Z.tile <- domain/PuzzleGame.moveUp()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveUp()Z.hidden3
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.emptyCell
     [java] PUTFIELD found for field domain/PuzzleGame.moveUp()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveUp()Z
     [java] Analysing method moveRight
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveRight()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveRight()Z.tile
     [java] Found dependency: domain/PuzzleGame.moveRight()Z.tile <- domain/SquareBoard.getTile(Ldomain/Position;)Ldomain/Tile;
     [java] Found dependency: domain/PuzzleGame.moveRight()Z.tile <- domain/PuzzleGame.board
     [java] Found dependency: domain/PuzzleGame.moveRight()Z.tile <- domain/PuzzleGame.moveRight()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveRight()Z.hidden3
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.emptyCell
     [java] PUTFIELD found for field domain/PuzzleGame.moveRight()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveRight()Z
     [java] Analysing method moveLeft
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveLeft()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveLeft()Z.tile
     [java] Found dependency: domain/PuzzleGame.moveLeft()Z.tile <- domain/SquareBoard.getTile(Ldomain/Position;)Ldomain/Tile;
     [java] Found dependency: domain/PuzzleGame.moveLeft()Z.tile <- domain/PuzzleGame.board
     [java] Found dependency: domain/PuzzleGame.moveLeft()Z.tile <- domain/PuzzleGame.moveLeft()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveLeft()Z.hidden3
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.emptyCell
     [java] PUTFIELD found for field domain/PuzzleGame.moveLeft()Z.tilePosition
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.moveLeft()Z
     [java] Analysing method endOfTheGame
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.endOfTheGame()Z
     [java] Analysing method toString
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.toString()Ljava/lang/String;
     [java] Analysing method pegarPositionsOfTiles
     [java] Generate ClearDependenciesOf: domain/PuzzleGame.pegarPositionsOfTiles()Ljava/util/Map;
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\ShufflePuzzleLevelEasy.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.numberOfShuffles
     [java] Analysing method shuffle
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.generateRandom
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.i
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.direction
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.direction <- java/util/Random.nextInt(I)I
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.direction <- domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.generateRandom
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- RIGHT
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- LEFT
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- DOWN
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelEasy.shuffle(Ldomain/Puzzle;)V.changed <- UP
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\ShufflePuzzleLevelHard.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.numberOfShuffles
     [java] Analysing method shuffle
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.generateRandom
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.i
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.direction
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.direction <- java/util/Random.nextInt(I)I
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.direction <- domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.generateRandom
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- RIGHT
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- LEFT
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- DOWN
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelHard.shuffle(Ldomain/Puzzle;)V.changed <- UP
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\ShufflePuzzleLevelMedium.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.numberOfShuffles
     [java] Analysing method shuffle
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.generateRandom
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.i
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.direction
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.direction <- java/util/Random.nextInt(I)I
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.direction <- domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.generateRandom
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- RIGHT
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- LEFT
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- DOWN
     [java] Generate ClearDependenciesOf: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- domain/Puzzle.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.game
     [java] Found dependency: domain/ShufflePuzzleLevelMedium.shuffle(Ldomain/Puzzle;)V.changed <- UP
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\SquareBoard.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/SquareBoard.dimension
     [java] PUTFIELD found for field domain/SquareBoard.<init>(I)V.dimension
     [java] Analysing method getDimension
     [java] Generate ClearDependenciesOf: domain/SquareBoard.getDimension()I
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\StrategyShufflePuzzle.class
     [java] Analysing method shuffle
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Testes.class
     [java] Analysing method <init>
     [java] Analysing method colocarPeçasNoTabuleiro
     [java] Generate ClearDependenciesOf: domain/Testes.colocarPeçasNoTabuleiro()V.tabuleiro
     [java] Generate ClearDependenciesOf: domain/Testes.colocarPeçasNoTabuleiro()V.jogo
     [java] Found dependency: domain/Testes.colocarPeçasNoTabuleiro()V.jogo <- domain/Testes.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes.colocarPeçasNoTabuleiro()V.jogo <- domain/Testes.colocarPeçasNoTabuleiro()V.this
     [java] Generate ClearDependenciesOf: domain/Testes.colocarPeçasNoTabuleiro()V.peças
     [java] Generate ClearDependenciesOf: domain/Testes.colocarPeçasNoTabuleiro()V.i
     [java] Generate ClearDependenciesOf: domain/Testes.colocarPeçasNoTabuleiro()V.i
     [java] Generate ClearDependenciesOf: domain/Testes.colocarPeçasNoTabuleiro()V.i
     [java] Generate ClearDependenciesOf: domain/Testes.colocarPeçasNoTabuleiro()V.j
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Analysing method moverCasaVaziaParaBaixo
     [java] Generate ClearDependenciesOf: domain/Testes.moverCasaVaziaParaBaixo()V.jogo
     [java] Found dependency: domain/Testes.moverCasaVaziaParaBaixo()V.jogo <- domain/Testes.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes.moverCasaVaziaParaBaixo()V.jogo <- domain/Testes.moverCasaVaziaParaBaixo()V.this
     [java] Generate ClearDependenciesOf: domain/Testes.moverCasaVaziaParaBaixo()V.deuCerto
     [java] Found dependency: domain/Testes.moverCasaVaziaParaBaixo()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes.moverCasaVaziaParaBaixo()V.deuCerto <- domain/Testes.moverCasaVaziaParaBaixo()V.jogo
     [java] Found dependency: domain/Testes.moverCasaVaziaParaBaixo()V.deuCerto <- DOWN
     [java] Found assert : assertTrue
     [java] Analysing method moverCasaVaziaParaCima
     [java] Generate ClearDependenciesOf: domain/Testes.moverCasaVaziaParaCima()V.jogo
     [java] Found dependency: domain/Testes.moverCasaVaziaParaCima()V.jogo <- domain/Testes.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes.moverCasaVaziaParaCima()V.jogo <- domain/Testes.moverCasaVaziaParaCima()V.this
     [java] Generate ClearDependenciesOf: domain/Testes.moverCasaVaziaParaCima()V.deuCerto
     [java] Found dependency: domain/Testes.moverCasaVaziaParaCima()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes.moverCasaVaziaParaCima()V.deuCerto <- domain/Testes.moverCasaVaziaParaCima()V.jogo
     [java] Found dependency: domain/Testes.moverCasaVaziaParaCima()V.deuCerto <- UP
     [java] Found assert : assertTrue
     [java] Analysing method moverCasaVaziaParaDireita
     [java] Generate ClearDependenciesOf: domain/Testes.moverCasaVaziaParaDireita()V.jogo
     [java] Found dependency: domain/Testes.moverCasaVaziaParaDireita()V.jogo <- domain/Testes.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes.moverCasaVaziaParaDireita()V.jogo <- domain/Testes.moverCasaVaziaParaDireita()V.this
     [java] Generate ClearDependenciesOf: domain/Testes.moverCasaVaziaParaDireita()V.deuCerto
     [java] Found dependency: domain/Testes.moverCasaVaziaParaDireita()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes.moverCasaVaziaParaDireita()V.deuCerto <- domain/Testes.moverCasaVaziaParaDireita()V.jogo
     [java] Found dependency: domain/Testes.moverCasaVaziaParaDireita()V.deuCerto <- RIGHT
     [java] Found assert : assertTrue
     [java] Analysing method moverCasaVaziaParaEsquerda
     [java] Generate ClearDependenciesOf: domain/Testes.moverCasaVaziaParaEsquerda()V.jogo
     [java] Found dependency: domain/Testes.moverCasaVaziaParaEsquerda()V.jogo <- domain/Testes.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes.moverCasaVaziaParaEsquerda()V.jogo <- domain/Testes.moverCasaVaziaParaEsquerda()V.this
     [java] Generate ClearDependenciesOf: domain/Testes.moverCasaVaziaParaEsquerda()V.deuCerto
     [java] Found dependency: domain/Testes.moverCasaVaziaParaEsquerda()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes.moverCasaVaziaParaEsquerda()V.deuCerto <- domain/Testes.moverCasaVaziaParaEsquerda()V.jogo
     [java] Found dependency: domain/Testes.moverCasaVaziaParaEsquerda()V.deuCerto <- LEFT
     [java] Found assert : assertTrue
     [java] Analysing method criarJogoVazioNoCentro
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Testes2.class
     [java] Analysing method <init>
     [java] Analysing method colocarPeçaNoTabuleiro
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarPeçaNoTabuleiro()V.tabuleiro
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarPeçaNoTabuleiro()V.jogo
     [java] Found dependency: domain/Testes2.colocarPeçaNoTabuleiro()V.jogo <- domain/Testes2.criarJogo()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes2.colocarPeçaNoTabuleiro()V.jogo <- domain/Testes2.colocarPeçaNoTabuleiro()V.this
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarPeçaNoTabuleiro()V.peças
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarPeçaNoTabuleiro()V.i
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarPeçaNoTabuleiro()V.i
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarPeçaNoTabuleiro()V.i
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarPeçaNoTabuleiro()V.j
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Found assert : assertEquals
     [java] Analysing method colocarNenhumaPeçaNoTabuleiro
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V.tabuleiro
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V.jogo
     [java] Found dependency: domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V.jogo <- domain/Testes2.criarJogo()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V.jogo <- domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V.this
     [java] Generate ClearDependenciesOf: domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V.peças
     [java] Found dependency: domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V.peças <- java/util/Collections.emptyList()Ljava/util/List;
     [java] Analysing method moverNull
     [java] Generate ClearDependenciesOf: domain/Testes2.moverNull()V.jogo
     [java] Found dependency: domain/Testes2.moverNull()V.jogo <- domain/Testes2.criarJogo()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes2.moverNull()V.jogo <- domain/Testes2.moverNull()V.this
     [java] Generate ClearDependenciesOf: domain/Testes2.moverNull()V.deuCerto
     [java] Found dependency: domain/Testes2.moverNull()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes2.moverNull()V.deuCerto <- domain/Testes2.moverNull()V.jogo
     [java] Found assert : assertFalse
     [java] Analysing method moverParaBaixo
     [java] Generate ClearDependenciesOf: domain/Testes2.moverParaBaixo()V.jogo
     [java] Found dependency: domain/Testes2.moverParaBaixo()V.jogo <- domain/Testes2.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes2.moverParaBaixo()V.jogo <- domain/Testes2.moverParaBaixo()V.this
     [java] Generate ClearDependenciesOf: domain/Testes2.moverParaBaixo()V.deuCerto
     [java] Found dependency: domain/Testes2.moverParaBaixo()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes2.moverParaBaixo()V.deuCerto <- domain/Testes2.moverParaBaixo()V.jogo
     [java] Found dependency: domain/Testes2.moverParaBaixo()V.deuCerto <- DOWN
     [java] Found assert : assertTrue
     [java] Analysing method falharMoverParaBaixo
     [java] Generate ClearDependenciesOf: domain/Testes2.falharMoverParaBaixo()V.jogo
     [java] Found dependency: domain/Testes2.falharMoverParaBaixo()V.jogo <- domain/Testes2.criarJogoVazioEmCima()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes2.falharMoverParaBaixo()V.jogo <- domain/Testes2.falharMoverParaBaixo()V.this
     [java] Generate ClearDependenciesOf: domain/Testes2.falharMoverParaBaixo()V.deuCerto
     [java] Found dependency: domain/Testes2.falharMoverParaBaixo()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes2.falharMoverParaBaixo()V.deuCerto <- domain/Testes2.falharMoverParaBaixo()V.jogo
     [java] Found dependency: domain/Testes2.falharMoverParaBaixo()V.deuCerto <- DOWN
     [java] Found assert : assertFalse
     [java] Analysing method moverParaCima
     [java] Generate ClearDependenciesOf: domain/Testes2.moverParaCima()V.jogo
     [java] Found dependency: domain/Testes2.moverParaCima()V.jogo <- domain/Testes2.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes2.moverParaCima()V.jogo <- domain/Testes2.moverParaCima()V.this
     [java] Generate ClearDependenciesOf: domain/Testes2.moverParaCima()V.deuCerto
     [java] Found dependency: domain/Testes2.moverParaCima()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes2.moverParaCima()V.deuCerto <- domain/Testes2.moverParaCima()V.jogo
     [java] Found dependency: domain/Testes2.moverParaCima()V.deuCerto <- UP
     [java] Found assert : assertTrue
     [java] Analysing method moverParaDireita
     [java] Generate ClearDependenciesOf: domain/Testes2.moverParaDireita()V.jogo
     [java] Found dependency: domain/Testes2.moverParaDireita()V.jogo <- domain/Testes2.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes2.moverParaDireita()V.jogo <- domain/Testes2.moverParaDireita()V.this
     [java] Generate ClearDependenciesOf: domain/Testes2.moverParaDireita()V.deuCerto
     [java] Found dependency: domain/Testes2.moverParaDireita()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes2.moverParaDireita()V.deuCerto <- domain/Testes2.moverParaDireita()V.jogo
     [java] Found dependency: domain/Testes2.moverParaDireita()V.deuCerto <- RIGHT
     [java] Found assert : assertTrue
     [java] Analysing method moverParaEsquerda
     [java] Generate ClearDependenciesOf: domain/Testes2.moverParaEsquerda()V.jogo
     [java] Found dependency: domain/Testes2.moverParaEsquerda()V.jogo <- domain/Testes2.criarJogoVazioNoCentro()Ldomain/PuzzleGame;
     [java] Found dependency: domain/Testes2.moverParaEsquerda()V.jogo <- domain/Testes2.moverParaEsquerda()V.this
     [java] Generate ClearDependenciesOf: domain/Testes2.moverParaEsquerda()V.deuCerto
     [java] Found dependency: domain/Testes2.moverParaEsquerda()V.deuCerto <- domain/PuzzleGame.moveToEmptyCell(Ldomain/Puzzle$Direction;)Z
     [java] Found dependency: domain/Testes2.moverParaEsquerda()V.deuCerto <- domain/Testes2.moverParaEsquerda()V.jogo
     [java] Found dependency: domain/Testes2.moverParaEsquerda()V.deuCerto <- LEFT
     [java] Found assert : assertTrue
     [java] Analysing method criarJogo
     [java] Analysing method criarJogoVazioNoCentro
     [java] Analysing method criarJogoVazioEmCima
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\domain\Tile.class
     [java] Analysing method <init>
     [java] Generate ClearDependenciesOf: domain/Tile.number
     [java] PUTFIELD found for field domain/Tile.<init>(I)V.number
     [java] Generate ClearDependenciesOf: domain/Tile.hash
     [java] PUTFIELD found for field java/lang/Integer.hashCode()I
     [java] Analysing method getNumber
     [java] Generate ClearDependenciesOf: domain/Tile.getNumber()I
     [java] Analysing method biggerThan
     [java] Generate ClearDependenciesOf: domain/Tile.biggerThan(Ldomain/Tile;)Z
     [java] Generate ClearDependenciesOf: domain/Tile.biggerThan(Ldomain/Tile;)Z
     [java] Analysing method equals
     [java] Generate ClearDependenciesOf: domain/Tile.equals(Ljava/lang/Object;)Z
     [java] Generate ClearDependenciesOf: domain/Tile.equals(Ljava/lang/Object;)Z
     [java] Analysing method hashCode
     [java] Generate ClearDependenciesOf: domain/Tile.hashCode()I
     [java] Analysing method toString
     [java] Generate ClearDependenciesOf: domain/Tile.toString()Ljava/lang/String;
     [java] BEGINNING INSTRUMENTATION OF D:\Igor\UFSC\17.1\Trabalhos\3 - TEAT2\EightPuzzleGame\bin\exceptions\ExceptionInvalidPosition.class
     [java] Analysing method <init>
     [java] Analysing method <init>
run-batch:
    [junit] Running domain.Testes
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.colocarPeçasNoTabuleiro()V
    [junit] State Coverage Report for domain/Testes.colocarPeçasNoTabuleiro()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 0 [  ]
    [junit] State Coverage: 0.0
    [junit] End test capture for : domain/Testes.colocarPeçasNoTabuleiro()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.moverCasaVaziaParaEsquerda()V
    [junit] State Coverage Report for domain/Testes.moverCasaVaziaParaEsquerda()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 3 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes.moverCasaVaziaParaEsquerda()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.moverCasaVaziaParaBaixo()V
    [junit] State Coverage Report for domain/Testes.moverCasaVaziaParaBaixo()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "DOWN", "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes.moverCasaVaziaParaBaixo()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.moverCasaVaziaParaDireita()V
    [junit] State Coverage Report for domain/Testes.moverCasaVaziaParaDireita()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell", "RIGHT" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes.moverCasaVaziaParaDireita()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.moverCasaVaziaParaCima()V
    [junit] State Coverage Report for domain/Testes.moverCasaVaziaParaCima()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell", "UP" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes.moverCasaVaziaParaCima()V
    [junit] --------------------------------------
    [junit] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0,469 sec
    [junit] Output:
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.colocarPeçasNoTabuleiro()V
    [junit] State Coverage Report for domain/Testes.colocarPeçasNoTabuleiro()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 0 [  ]
    [junit] State Coverage: 0.0
    [junit] End test capture for : domain/Testes.colocarPeçasNoTabuleiro()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.moverCasaVaziaParaEsquerda()V
    [junit] State Coverage Report for domain/Testes.moverCasaVaziaParaEsquerda()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 3 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes.moverCasaVaziaParaEsquerda()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.moverCasaVaziaParaBaixo()V
    [junit] State Coverage Report for domain/Testes.moverCasaVaziaParaBaixo()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "DOWN", "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes.moverCasaVaziaParaBaixo()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.moverCasaVaziaParaDireita()V
    [junit] State Coverage Report for domain/Testes.moverCasaVaziaParaDireita()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell", "RIGHT" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes.moverCasaVaziaParaDireita()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes.moverCasaVaziaParaCima()V
    [junit] State Coverage Report for domain/Testes.moverCasaVaziaParaCima()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell", "UP" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes.moverCasaVaziaParaCima()V
    [junit] --------------------------------------
    [junit] Running domain.Testes2
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverParaCima()V
    [junit] State Coverage Report for domain/Testes2.moverParaCima()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell", "UP" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.moverParaCima()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverParaBaixo()V
    [junit] State Coverage Report for domain/Testes2.moverParaBaixo()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "DOWN", "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.moverParaBaixo()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverParaDireita()V
    [junit] State Coverage Report for domain/Testes2.moverParaDireita()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell", "RIGHT" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.moverParaDireita()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverNull()V
    [junit] State Coverage Report for domain/Testes2.moverNull()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 1 [ "LEFT" ]
    [junit] State Coverage: 0.0
    [junit] End test capture for : domain/Testes2.moverNull()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.colocarPeçaNoTabuleiro()V
    [junit] State Coverage Report for domain/Testes2.colocarPeçaNoTabuleiro()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 0 [  ]
    [junit] State Coverage: 0.0
    [junit] End test capture for : domain/Testes2.colocarPeçaNoTabuleiro()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.falharMoverParaBaixo()V
    [junit] State Coverage Report for domain/Testes2.falharMoverParaBaixo()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "DOWN", "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.falharMoverParaBaixo()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverParaEsquerda()V
    [junit] State Coverage Report for domain/Testes2.moverParaEsquerda()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 3 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.moverParaEsquerda()V
    [junit] --------------------------------------
    [junit] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0,481 sec
    [junit] Output:
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverParaCima()V
    [junit] State Coverage Report for domain/Testes2.moverParaCima()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell", "UP" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.moverParaCima()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverParaBaixo()V
    [junit] State Coverage Report for domain/Testes2.moverParaBaixo()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "DOWN", "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.moverParaBaixo()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverParaDireita()V
    [junit] State Coverage Report for domain/Testes2.moverParaDireita()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell", "RIGHT" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.moverParaDireita()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverNull()V
    [junit] State Coverage Report for domain/Testes2.moverNull()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 1 [ "LEFT" ]
    [junit] State Coverage: 0.0
    [junit] End test capture for : domain/Testes2.moverNull()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.colocarPeçaNoTabuleiro()V
    [junit] State Coverage Report for domain/Testes2.colocarPeçaNoTabuleiro()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 0 [  ]
    [junit] State Coverage: 0.0
    [junit] End test capture for : domain/Testes2.colocarPeçaNoTabuleiro()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.falharMoverParaBaixo()V
    [junit] State Coverage Report for domain/Testes2.falharMoverParaBaixo()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 4 [ "DOWN", "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.falharMoverParaBaixo()V
    [junit] --------------------------------------
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.colocarNenhumaPeçaNoTabuleiro()V
    [junit] --------------------------------------
    [junit] Begin test capture for : domain/Testes2.moverParaEsquerda()V
    [junit] State Coverage Report for domain/Testes2.moverParaEsquerda()V
    [junit] Modified states: 17 [ "domain/Grid.numberOfColumns", "domain/EmbaralhadorFixo.movimentos", "domain/Tile.number", "domain/PuzzleGame.board", "domain/Grid.matrix", "domain/Board.grid", "domain/Tile.hash", "domain/Position.column", "domain/Position.line", "domain/PuzzleGame.positionsOfTiles", "domain/Cell.tile", "domain/Board.columns", "domain/SquareBoard.dimension", "domain/PuzzleGame.emptyCell", "domain/Board.lines", "domain/PuzzleGame.boardWithFinalState", "domain/Grid.numberOfLines" ]
    [junit] Covered states: 3 [ "LEFT", "domain/PuzzleGame.board", "domain/PuzzleGame.emptyCell" ]
    [junit] State Coverage: 0.11764705882352941
    [junit] End test capture for : domain/Testes2.moverParaEsquerda()V
    [junit] --------------------------------------
report:
     [java] Usage: HtmlReport <reportFolder>
     [java] Reporting to D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/scova
     [java] Html report generated at D:/Igor/UFSC/17.1/Trabalhos/3 - TEAT2/EightPuzzleGame/scova/report.html
all-report:
BUILD SUCCESSFUL
Total time: 13 seconds

